#include <iostream>
#include <fstream>
using namespace std;

float getfrequency(char h) {
    float freq;
    if (h == 'E') {
        freq = 164.81;
    }
    if (h == 'G') {
        freq = 196;
    }
    if (h == 'C') {
        freq = 262;
    }
    else {
        freq = 0;
    }
    return freq;

}


float getamplitude(char e) {
    float amplitude;
    amplitude = e * 1000;
    return amplitude;
}
int getlength(int e) {
    int T;
    if (e == 4) T = 1.0;
    else if (e == 8) T = 0.5;
    else if (e == 16) T = 0.25;
    return T;
}

int main() {
    char* header;
    header = new char[44];

    short* n; 
    n = (short*)(header + 22); 
    cout << *n << endl; //number of channels
    
    int* fs; 
    fs = (int*)(header + 24); 
    cout << *fs << endl; //Sample rate
    
    short* b; 
    b = (short*)(header + 28); 
    cout << *b << endl; //byte rate 

    ifstream xx("Beatles.wav", ios::binary | ios::in);
    if (!xx) return 666;
    xx.read(header, 44 * sizeof(char));
    xx.close();

    short* my_data = new short[fs[0]];
    int num, eu, hh, T;
    char ss;
    float f, a;
    const float pi = 3.141592;
    int N = fs[0] * 20;

    *n = 1;
    *b = n[0] * fs[0] * sizeof(short);
    ifstream music("music.txt");
    music >> num;
    for (int i = 0; i < num; i++) {
        music >> eu >> hh >> ss;
        f = getfrequency(hh); // 주파수
        a = getamplitude(ss); // 진폭
        T = getlength(eu); // 주기
        float dt = 1. / fs[0];
        // sample_num[i] = T * fs[0];
        my_data[i] = (short)(a * sin(2.0 * pi * f * dt));
    }

    ofstream xxx("my3.wav", ios::binary | ios::out);
    if (!xxx) return 666;
    xxx.write(header, 44 * sizeof(char));
    xxx.write((char*)my_data, (*fs) * sizeof(short));
    xxx.close();

}
