#include <iostream>
#include <fstream>
#include <typeinfo>

using namespace std;

// 음에 따른 주파수 얻는 함수
float getfrequency(char *h) {
    float freq;
    if (*h == 'C') {
        freq = 130.81;
    }
    if (*h == 'D') {
        freq = 146.83;
    }
    if (*h == 'E') {
        freq = 164.81;
    }
    if (*h == 'F') {
        freq = 174.61;
    }
    if (*h == 'G') {
        freq = 196.0;
    }
    if (*h == 'A') {
        freq = 220.0;
    }
    if (*h == 'B') {
        freq = 246.94;
    }
    else {
        freq = 0;
    }
    return freq;

}

// 볼륨 조절함수 (진폭)
float getamplitude(int* e) {
    float amplitude;
    amplitude = *e * 1000;
    return amplitude;
}

// 하나의 음표 연주시간 정하기
int getlength(int*  e) {
    int TT;
    if (*e == 4) TT = 1.0;
    else if (*e == 8) TT = 0.5;
    else if (*e == 16) TT = 0.25;
    else TT = 0;
    return TT;
}

int main() {
    char* header;
    header = new char[44];

    short* n;
    n = (short*)(header + 22);
    cout <<"NumChannels: " << *n << endl;

    int* fs;
    fs = (int*)(header + 24);
    cout << "Sample Rate: " << *fs << endl;

    short* b;
    b = (short*)(header + 28);
    cout << "Byte Rate: " << *b << endl;

    // 1. Beatles.wav 의 헤더파일을 읽는다
    ifstream xx("Beatles.wav", ios::binary | ios::in);
    if (!xx) return 666;
    xx.read(header, 44 * sizeof(char));
    xx.close();

    short* my_data = new short[fs[0]];
    int *eu, *ss, *T;
    int num;
    char* hh;
    float* f, * a;
    const float pi = 3.141592;
    int N = fs[0] * 20;

    // 2. 헤더 내용을 바꾼다.
    *n = 1;
    *b = n[0] * fs[0] * sizeof(short); // n[0] = numchannels , fs[0] = Sample Rate
    
    ifstream music("music.txt");
    music >> num;// num = 6
    cout << num << " notes\n";
    
    T = new int[num];
    a = new float[num];
    f = new float[num];

    eu = new int[num];
    ss = new int[num];
    hh = new char[num];
    
    for (int i = 0; i < num; i++) {
        music >> eu[i] >> hh[i] >> ss[i];
        cout << "eu[" << i << "] : " << eu[i] << ", hh[" << i << "] : " << hh[i] << ", ss[" << i << "] : " << ss[i] << endl;
        cout << "Type of hh[" << i << "] is: " << typeid(hh[i]).name() << endl;
        cout << hh + i << endl;
        f[i] = getfrequency(hh+i); // 주파수 int pointer 입력값으로 받음
        a[i] = getamplitude(ss); // 진폭 char pointer 입력값으로 받음
        T[i] = getlength(eu); // 주기 int pointer 입력값으로 받음
        float dt = 1. / fs[0];  // dt = 1/ 총 샘플링 횟수
        // sample_num[i] = T * fs[0];
        my_data[i] = (short)(a[i] * sin(2.0 * pi * f[i] * dt)); // sizeof(short) * num = 2 num bytes 만큼 써짐
        cout << "a[" << i << "] :" << a[i] << endl;
        cout << "f[" << i << "] :" << f[i] << endl;
        cout << "my_data[" << i << "] :" << my_data[i] << endl;
    }


    // 수정된 header를 출력파일에 쓴다.
        ofstream xxx("my3.wav", ios::binary | ios::out);
        if (!xxx) return 666;
        xxx.write(header, 44 * sizeof(char)); // 44 bytes
        xxx.write((char*)my_data, (*fs) * sizeof(short)); // 88200 bytes
        xxx.close();

    }
 //

